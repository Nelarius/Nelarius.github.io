<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tools on My thought repository</title>
    <link>https://nelari.us/tags/tools/</link>
    <description>Recent content in Tools on My thought repository</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 24 Mar 2019 08:22:27 +0200</lastBuildDate>
    
	<atom:link href="https://nelari.us/tags/tools/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>imnodes: writing an immediate mode node editor library</title>
      <link>https://nelari.us/post/imnodes/</link>
      <pubDate>Sun, 24 Mar 2019 08:22:27 +0200</pubDate>
      
      <guid>https://nelari.us/post/imnodes/</guid>
      <description>Node editors are one of the more discussed use cases for the dear imgui UI library, and there are lots of gists as well as fully-fledged implementations for them on Github. If you want to implement your own node editor, you can get cracking! However, my pet peeve with the available samples and implementations is that they often aren&amp;rsquo;t immediate mode and don&amp;rsquo;t obey dear imgui&amp;rsquo;s philosophy of being lightweight and dependency free.</description>
    </item>
    
    <item>
      <title>Implementing simple translation and rotation gizmos</title>
      <link>https://nelari.us/post/gizmos/</link>
      <pubDate>Fri, 06 Apr 2018 16:17:29 +0200</pubDate>
      
      <guid>https://nelari.us/post/gizmos/</guid>
      <description>Fed up with entering numbers manually via the UI for each game object transform in my home-made game engine, I wanted to integrate a gizmo tool. Gizmos, at least in the context of game engine editors, are little 3d tools that you can use to manipulate objects in 3d space. While there are a few easy-ish-to-integrate transform gizmo libraries on github, I was not completely happy with them. The interface of tinygizmo is nice, but it intersects camera rays with the triangle meshes of the primitive.</description>
    </item>
    
  </channel>
</rss>