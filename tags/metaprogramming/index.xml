<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Metaprogramming on My thought repository</title>
    <link>https://nelari.us/tags/metaprogramming/</link>
    <description>Recent content in Metaprogramming on My thought repository</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 31 Aug 2015 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://nelari.us/tags/metaprogramming/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Placing an arbitrary number of function calls into a function argument list using templates</title>
      <link>https://nelari.us/post/template-function-args/</link>
      <pubDate>Mon, 31 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>https://nelari.us/post/template-function-args/</guid>
      <description>While I was trying to generate code to bind C++ to a scripting language, I discovered that C++ templates, in their current modern form, are not as scary as I used to think they were. Here are a few useful things that I discovered.
First, in toy form, the problem that I was trying to solve. Suppose I have a free function that I want to bind to a virtual machine.</description>
    </item>
    
  </channel>
</rss>